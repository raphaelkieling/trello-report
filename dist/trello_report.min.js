const _ = require("paretojs"),
  colors = require("colors"),
  {
    toLowercase: toLowercase,
    trim: trim,
    getMessageError: getMessageError,
    showErrorLog: showErrorLog,
    validParameter: validParameter
  } = require("../utils/utils"),
  Trello = require("node-trello");
function TrelloReport(r) {
  if ("object" != typeof r) throw new Error("Config TrelloReport not defined");
  if (!validParameter(r.your_key)("string"))
    throw new Error("YOUR_KEY not valid");
  if (!validParameter(r.token)("string")) throw new Error("TOKEN not valid");
  if (!validParameter(r.id_list)("string"))
    throw new Error("ID_LIST not valid");
  this.config(r);
}
(TrelloReport.prototype.config = function(r) {
  let { your_key: e, token: o, id_list: t } = r;
  (this.id_list = t), (this.trello = new Trello(e, o));
}),
  (TrelloReport.prototype.middleware = function() {
    return (r, e, o, t) => {
      let i = _.pipe(getMessageError, toLowercase)(r);
      showErrorLog(i),
        this.createCard(i).then((r, e) => {
          console.log("Card sended to trello.");
        }),
        t(r);
    };
  }),
  (TrelloReport.prototype.createCard = function(r) {
    if (!validParameter(r)("string"))
      throw new Error("Need name valid to create a card");
    return new Promise((e, o) => {
      this.trello.post("/1/cards", { idList: this.id_list, name: r }, e);
    });
  }),
  (module.exports = TrelloReport);
